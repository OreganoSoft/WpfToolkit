<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:OreganoSoft.WpfToolkit.EditableComboBox">

    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    <!--<Style TargetType="{x:Type ListViewItem}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#19f39611"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#19000000"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <Style TargetType="ListBoxItem" x:Key="SuggestionItemStyle">

        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="Red"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="Blue"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="ContentBorder" Background="White">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="ContentBorder"  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="IsSelected" Value="True" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="ContentBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TransparentTextBoxStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="Transparent"
                                      Focusable="True"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="GridArrow" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                <Setter Property="Background" Value="#dfdfdf" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type local:EditableComboBox}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditableComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" HorizontalAlignment="Stretch">
                        <Grid>
                            <ToggleButton x:Name="PART_ToggleButton" OverridesDefaultStyle="True" Padding="5,0,0,0" Panel.ZIndex="10" MinHeight="50" Background="{x:Null}" Focusable="False" ClickMode="Press" IsTabStop="False" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Visibility="{TemplateBinding SelectedItemVisibility}">
                                <Grid x:Name="PART_SelecctedItem" HorizontalAlignment="Stretch" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Content="{TemplateBinding SelectedItem}"  ContentTemplate="{TemplateBinding SelectedItemTemplate}" x:Name="PART_SelectedItemTemplate" HorizontalAlignment="Left"/>
                                    <Grid Grid.Column="1" Margin="0,2,0,0" HorizontalAlignment="Right" Width="20" VerticalAlignment="Stretch" >
                                        <Path x:Name="arrow" Data="M 1,1.5 L 5.5,5 L 10,1.5" HorizontalAlignment="Center" Stroke="Gray" Margin="0,5,0,0" StrokeThickness="2" VerticalAlignment="Center"/>
                                    </Grid>
                                </Grid>
                            </ToggleButton>
                            <Grid >
                                <TextBlock x:Name="PART_Watermark" Text="{TemplateBinding Watermark}"
                                               Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Focusable="False" Foreground="Gray" Margin="10,0,0,0" Padding="4,0,0,0"/>
                                <TextBox x:Name="PART_Editor" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding SearchText,RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                  MinHeight="50" BorderBrush="#D9D9D9" Style="{StaticResource ResourceKey=TransparentTextBoxStyle}"/>
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                   Width="{TemplateBinding ActualWidth}"
                                   HorizontalOffset="0" MinHeight="25" MaxHeight="400" AllowsTransparency="True"
                                   PopupAnimation="Slide" Focusable="False" StaysOpen="False">
                                <Border Background="White" BorderThickness="1" BorderBrush="Gray" CornerRadius="0" Padding="2">
                                    <ListBox x:Name="PART_Selector"
                                                 ItemsSource="{TemplateBinding ItemsSource}"
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                 Focusable="False"
                                                 BorderThickness="0"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto" AlternationCount="2"
                                                 ItemContainerStyle="{StaticResource ResourceKey=SuggestionItemStyle}">
                                    </ListBox>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
